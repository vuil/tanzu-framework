apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: ${CLUSTER_NAME}
  labels:
    tkg.tanzu.vmware.com/cluster-name: '${ CLUSTER_NAME }'
spec:
  clusterNetwork:
    pods:
      cidrBlocks: ["${CLUSTER_CIDR}"]
    services:
      cidrBlocks: ["${SERVICE_CIDR}"]
  topology:
    class: tkg-cluster-class
    version: v1.21.2
    controlPlane:
      replicas: ${CONTROL_PLANE_MACHINE_COUNT}
    workers:
      machineDeployments:
      - class: tkg-worker
        name: tkg-worker-pool
        replicas: ${WORKER_MACHINE_COUNT}
    variables:
---
# VVVV everything below would have been pre-generated prior to cluster creation
# and deployed on the management cluster
apiVersion: cluster.x-k8s.io/v1beta1
kind: ClusterClass
metadata:
  name: tkg-cluster-class-dev
  namespace: default
spec:
  controlPlane:
    ref:
      apiVersion: controlplane.cluster.x-k8s.io/v1beta1
      kind: KubeadmControlPlaneTemplate
      name: tkg-kcp
    machineInfrastructure:
      ref:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AzureMachineTemplate
        name: tkg-controlplane-azure-template
  workers:
    machineDeployments:
    - class: tkg-worker
      template:
         bootstrap:
           ref:
             apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
             kind: KubeadmConfigTemplate
             name: tkg-bootstrap-template
         infrastructure:
           ref:
             apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
             kind: AzureMachineTemplate
             name: tkg-azure-template
  infrastructure:
     ref:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AzureClusterTemplate
        name: azure-cluster-template
  variables:
  - name: AZURE_LOCATION
    required: true
    schema:
      openAPIV3Schema:
        type: string
  - name: AZURE_VNET_NAME
    required: true
    schema:
      openAPIV3Schema:
        type: string
  - name: AZURE_VNET_CIDR
    required: true
    schema:
      openAPIV3Schema:
        type: string
  - name: AZURE_CONTROL_PLANE_SUBNET_NAME
    required: true
    schema:
      openAPIV3Schema:
        type: string
  - name: AZURE_CONTROL_PLANE_SUBNET_CIDR
    required: true
    schema:
      openAPIV3Schema:
        type: string
  - name: AZURE_NODE_SUBNET_NAME
    required: true
    schema:
      openAPIV3Schema:
        type: string
  - name: AZURE_NODE_SUBNET_CIDR
    required: true
    schema:
      openAPIV3Schema:
        type: string
  - name: AZURE_RESOURCE_GROUP
    required: true
    schema:
      openAPIV3Schema:
        type: string
  - name: AZURE_SUBSCRIPTION_ID
    required: true
    schema:
      openAPIV3Schema:
        type: string
  - name: CLUSTER_NAME
    required: true
    schema:
      openAPIV3Schema:
        type: string
  patches:
  - name: ACT_main
    definitions:
    - selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AzureClusterTemplate
      jsonPatches:
      - op: replace
        path: "/spec/identityRef/name"
        valueFrom:
          template: '{{.builtin.cluster.name}}-identity'
      - op: replace
        path: "/spec/location"
        valueFrom:
          template: '{{.AZURE_LOCATION}}'
      - op: replace
        path: "/spec/networkSpec/vnet"
        valueFrom:
          template: |
            name: {{.builtin.cluster.name}}-vnet
            resourceGroup: {{.builtin.cluster.name}}
            cidrBlock: {{.AZURE_VNET_CIDR}}
      - op: replace
        path: "/spec/resourceGroup"
        valueFrom:
          # TODO (AZURE_RESOURCE_GROUP optionally)
          variable: builtin.cluster.name
      - op: replace
        path: "/spec/subscriptionID"
        valueFrom:
          variable: AZURE_SUBSCRIPTION_ID
      - op: replace
        path: "/spec/subnets"
        valueFrom:
          template: |
            - name: {{ .AZURE_CONTROL_PLANE_SUBNET_NAME }}
              role: control-plane
              cidrBlock: {{ .AZURE_CONTROL_PLANE_SUBNET_CIDR }}
            - name: {{ .AZURE_NODE_SUBNET_NAME }}
              role: node
              cidrBlock: {{ .AZURE_NODE_SUBNET_CIDR }}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AzureClusterTemplate
metadata:
  name: azure-cluster-template
spec:
  template:
    spec:
      identityRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AzureClusterIdentity
        name: ${CLUSTER_NAME}-identity
        namespace: tkg-system
      location: ${AZURE_LOCATION}
      networkSpec:
        vnet:
          name: "${AZURE_VNET_NAME:=${CLUSTER_NAME}-vnet}"
          resourceGroup: ${AZURE_VNET_RESOURCE_GROUP:=${CLUSTER_NAME}}
          cidrBlock: ${AZURE_VNET_CIDR}
        subnets:
          - name: ${AZURE_CONTROL_PLANE_SUBNET_NAME}
            role: control-plane
            cidrBlock: ${AZURE_CONTROL_PLANE_SUBNET_CIDR}
          - name: ${AZURE_NODE_SUBNET_NAME}
            role: node
            cidrBlock: ${AZURE_NODE_SUBNET_CIDR}
      resourceGroup: ${AZURE_RESOURCE_GROUP:=${CLUSTER_NAME}}
      subscriptionID: ${AZURE_SUBSCRIPTION_ID}
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlaneTemplate
metadata:
  name: tkg-kcp
spec:
  template:
    spec:
      kubeadmConfigSpec:
        clusterConfiguration:
          apiServer:
            extraArgs:
              cloud-config: /etc/kubernetes/azure.json
              cloud-provider: azure
            extraVolumes:
              - hostPath: /etc/kubernetes/azure.json
                mountPath: /etc/kubernetes/azure.json
                name: cloud-config
                readOnly: true
            timeoutForControlPlane: 20m
          controllerManager:
            extraArgs:
              allocate-node-cidrs: "true"
              cloud-config: /etc/kubernetes/azure.json
              cloud-provider: azure
              cluster-name: ${CLUSTER_NAME}
            extraVolumes:
              - hostPath: /etc/kubernetes/azure.json
                mountPath: /etc/kubernetes/azure.json
                name: cloud-config
                readOnly: true
          dns:
            imageRepository: registry.tkg.vmware.run
            imageTag: v1.6.5_vmware.4
          etcd:
            local:
              dataDir: /var/lib/etcddisk/etcd
              extraArgs:
                cipher-suites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
                quota-backend-bytes: "8589934592"
              imageRepository: registry.tkg.vmware.run
              imageTag: v3.4.3_vmware.4
          imageRepository: registry.tkg.vmware.run
        diskSetup:
          filesystems:
          - device: /dev/disk/azure/scsi1/lun0
            extraOpts:
            - -E
            - lazy_itable_init=1,lazy_journal_init=1
            filesystem: ext4
            label: etcd_disk
          - device: ephemeral0.1
            filesystem: ext4
            label: ephemeral0
            replaceFS: ntfs
          partitions:
          - device: /dev/disk/azure/scsi1/lun0
            layout: true
            overwrite: false
            tableType: gpt
        files:
        - contentFrom:
            secret:
              key: control-plane-azure.json
              name: ${CLUSTER_NAME}-control-plane-azure-json
          owner: root:root
          path: /etc/kubernetes/azure.json
          permissions: "0644"
        initConfiguration:
          nodeRegistration:
            kubeletExtraArgs:
              azure-container-registry-config: /etc/kubernetes/azure.json
              cloud-config: /etc/kubernetes/azure.json
              cloud-provider: azure
            name: '{{ ds.meta_data["local_hostname"] }}'
        joinConfiguration:
          nodeRegistration:
            kubeletExtraArgs:
              azure-container-registry-config: /etc/kubernetes/azure.json
              cloud-config: /etc/kubernetes/azure.json
              cloud-provider: azure
            name: '{{ ds.meta_data["local_hostname"] }}'
        mounts:
          - - LABEL=etcd_disk
            - /var/lib/etcddisk
        useExperimentalRetryJoin: true
        postKubeadmCommands: []
        preKubeadmCommands: []
      machineTemplate:
        infrastructureRef:
          apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
          kind: AzureMachineTemplate
          name: tkg-control-plane
      replicas: ${CONTROL_PLANE_MACHINE_COUNT}
      version: ${KUBERNETES_VERSION}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AzureMachineTemplate
metadata:
  name: tkg-controlplane-azure-template
spec:
  template:
    spec:
      dataDisks:
        - diskSizeGB: 256
          lun: 0
          nameSuffix: etcddisk
      osDisk:
        diskSizeGB: 128
        managedDisk:
          storageAccountType: Premium_LRS
        osType: Linux
      sshPublicKey: ${AZURE_SSH_PUBLIC_KEY_B64:=""}
      vmSize: ${AZURE_CONTROL_PLANE_MACHINE_TYPE}
#---
#apiVersion: cluster.x-k8s.io/v1beta1
#kind: MachineDeployment
#metadata:
#  name: ${CLUSTER_NAME}-md-0
#spec:
#  clusterName: ${CLUSTER_NAME}
#  replicas: ${WORKER_MACHINE_COUNT}
#  selector:
#    matchLabels: null
#  template:
#    metadata:
#      labels:
#        node-pool: "${CLUSTER_NAME}-worker-pool"
#    spec:
#      bootstrap:
#        configRef:
#          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
#          kind: KubeadmConfigTemplate
#          name: ${CLUSTER_NAME}-md-0
#      clusterName: ${CLUSTER_NAME}
#      infrastructureRef:
#        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
#        kind: AzureMachineTemplate
#        name: ${CLUSTER_NAME}-md-0
#      version: ${KUBERNETES_VERSION}
#      failureDomain: "${AZURE_NODE_AZ}"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AzureMachineTemplate
metadata:
  name: tkg-azure-template
spec:
  template:
    spec:
      osDisk:
        diskSizeGB: 128
        managedDisk:
          storageAccountType: Premium_LRS
        osType: Linux
      sshPublicKey: ${AZURE_SSH_PUBLIC_KEY_B64:=""}
      vmSize: ${AZURE_NODE_MACHINE_TYPE}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: tkg-bootstrap-template
spec:
  template:
    spec:
      files:
        - contentFrom:
            secret:
              key: worker-node-azure.json
              # VVVV TODO(vui)
              name: tkg-md-0-azure-json
          owner: root:root
          path: /etc/kubernetes/azure.json
          permissions: "0644"
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            azure-container-registry-config: /etc/kubernetes/azure.json
            cloud-config: /etc/kubernetes/azure.json
            cloud-provider: azure
          name: '{{ ds.meta_data["local_hostname"] }}'
      useExperimentalRetryJoin: true
      preKubeadmCommands: []
